buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version "2.2.1.RELEASE"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'io.freefair.lombok' version '4.1.5'
    id "com.moowork.node" version "1.3.1"
}

project.ext {
    cucumberVersion = "1.2.6"
    junitVersion = "4.12"
}

springBoot {
    mainClassName = 'lukuvinkkikirjasto.Main'
}

mainClassName = 'lukuvinkkikirjasto.Main'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.h2database:h2")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.heroku.sdk:heroku-jdbc:0.1.1")
    compile("org.postgresql:postgresql:9.4.1212.jre7")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework:spring-web")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework:spring-test")
    testCompile "info.cukes:cucumber-core:" + cucumberVersion
    testCompile "info.cukes:cucumber-java:" + cucumberVersion
    testCompile "info.cukes:cucumber-junit:" + cucumberVersion
    testCompile "info.cukes:cucumber-spring:" + cucumberVersion
    testCompile "junit:junit:" + junitVersion 
}

// https://blog.indrek.io/articles/serving-react-apps-from-spring-boot/
// https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
node {
  download = true
  workDir = file("${project.buildDir}/nodejs")
  npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
  description = "Installs all dependencies from package.json"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["install"]
}

task appNpmBuild(type: NpmTask) {
  description = "Builds production version of the webapp"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["run", "build"]
}

task copyWebApp(type: Copy) {
  from 'src/main/webapp/build'
  into 'build/resources/main/static/.'
}